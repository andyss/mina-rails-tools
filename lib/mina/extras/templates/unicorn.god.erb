# http://unicorn.bogomips.org/SIGNALS.html

rails_env = "production"
rails_root = "<%= "#{deploy_to!}/#{current_path!}" %>"
shared_root = "<%= "#{deploy_to!}/#{shared_path!}" %>"
config = "#{shared_root}/unicorn.rb"
unicorn_pid = "<%= "#{deploy_to!}/#{shared_path!}/pids/unicorn.pid" %>"

# God.pid_file_directory = File.join("<%= deploy_to! %>", "shared", "pids")
God.watch do |w|
  w.name = "unicorn_<%= "#{app!}" %>"
  w.interval = 30.seconds # default

  w.start = "cd #{rails_root} && /usr/local/bin/bundle exec unicorn_rails -D -c #{config} -E #{rails_env}"

  # QUIT gracefully shuts down workers
  w.stop = "kill -QUIT `cat #{unicorn_pid}`"

  # USR2 causes the master to re-create itself and spawn a new worker pool
  w.restart = "kill -USR2 `cat #{unicorn_pid}`"

  w.start_grace = 30.seconds
  w.restart_grace = 30.seconds
  # w.pid_file = "#{rails_root}/tmp/pids/unicorn.pid"
  w.pid_file = unicorn_pid

  w.uid = "<%= user! %>"
  w.gid = "<%= group! %>"

  w.behavior(:clean_pid_file)

  w.start_if do |start|
    start.condition(:process_running) do |c|
      c.interval = 10.seconds
      c.running = false
    end
  end

  w.restart_if do |restart|
    restart.condition(:memory_usage) do |c|
      c.above = 300.megabytes
      c.times = [3, 5] # 3 out of 5 intervals
    end

    restart.condition(:cpu_usage) do |c|
      c.above = 80.percent
      c.times = 5
    end
  end

  # lifecycle
  w.lifecycle do |on|
    on.condition(:flapping) do |c|
      c.to_state = [:start, :restart]
      c.times = 5
      c.within = 5.minute
      c.transition = :unmonitored
      c.retry_in = 10.minutes
      c.retry_times = 5
      c.retry_within = 2.hours
    end
  end
  
  # w.transition(:up, :start) do |on|
  #   on.condition(:process_exits) do |c|
  #     c.notify = 'me'
  #   end
  # end
end