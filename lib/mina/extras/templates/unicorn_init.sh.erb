#!/usr/bin/env bash
set -e

AS_USER=deploy
TIMEOUT=60
APP_ROOT="<%= "#{deploy_to!}" %>"
PID_PATH="<%= "#{deploy_to!}/#{shared_path!}/pids" %>"
PID="$PID_PATH/unicorn.pid"
ENVIRONMENT="<%= rails_env || "production" %>"
CONFIG="$APP_ROOT/<%= "#{shared_path!}/unicorn.rb" %>"
UARGS="-D -c $CONFIG -E $ENVIRONMENT"
CMD="sh -c \"cd $APP_ROOT/<%= current_path! %> && bundle exec unicorn_rails $UARGS\" - $AS_USER"
action="$1"
#set -u

old_pid="$PID.oldbin"

sig () {
  test -s "$PID" && kill -$1 `cat $PID`
}

oldsig () {
  test -s $old_pid && kill -$1 `cat $old_pid`
}

workersig () {
  workerpid="$PID_PATH/unicorn.$2.pid"
  test -s "$workerpid" && kill -$1 `cat $workerpid`
}

case $action in
start)
  sig 0 && echo >&2 "Already running" && exit 0
  $CMD && echo "start ok" && exit 0
  ;;
stop)
  sig QUIT && echo "stop ok" && exit 0
  echo >&2 "Not running"
  ;;
force-stop)
  sig TERM && echo "force-stop ok" && exit 0
  echo >&2 "Not running"
  ;;
restart|reload)
  sig HUP && echo "reloaded OK" && exit 0
  echo >&2 "Couldn't reload, starting '$CMD' instead"
  $CMD
  ;;
upgrade)
  sig USR2 && echo Upgraded && exit 0
  echo >&2 "Couldn't upgrade, starting '$CMD' instead"
  $CMD
  ;;
# upgrade)
#   if sig USR2 && sleep 2 && sig 0 && oldsig QUIT
#   then
#     n=$TIMEOUT
#     while test -s $old_pid && test $n -ge 0
#     do
#       printf '.' && sleep 1 && n=$(( $n - 1 ))
#     done
#     echo
# 
#     if test $n -lt 0 && test -s $old_pid
#     then
#       echo >&2 "$old_pid still exists after $TIMEOUT seconds"
#       exit 1
#     fi
#     exit 0
#   fi
#   echo >&2 "Couldn't upgrade, starting '$CMD' instead"
#   su -c "$CMD" - vagrant
#   ;;
kill_worker)
  workersig QUIT $2 && exit 0
  echo >&2 "Worker not running"
  ;;

reopen-logs)
  sig USR1
  ;;
*)
  echo >&2 "Usage: $0 <start|stop|restart|upgrade|force-stop|reopen-logs>"
  exit 1
  ;;
esac